<?xml version="1.0" encoding="utf-8"?>
<Window
    x:Class="EmployeeManager.WinUI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:EmployeeManager.WinUI"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:controls="using:EmployeeManager.WinUI.Controls"
	xmlns:viewModel="using:EmployeeManager.WinUI.ViewModel"
	mc:Ignorable="d">

	<Grid x:Name="root" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
		<Grid.Resources>
			<!--Data Template allows us to style the data (change the way a object or data should be displayed)-->
			<DataTemplate x:Key="CustomerDataTemplate"
						  x:DataType="viewModel:EmployeeItemViewModel">
				<StackPanel Orientation="Horizontal">
					<TextBlock Text="{x:Bind FirstName, Mode=OneWay}" FontWeight="Bold"/>
					<TextBlock Text="{x:Bind LastName, Mode=OneWay}" Margin="5 0 0 0"/>
					<TextBlock Text="(Dev)" Margin="5 0 0 0" Opacity="0.5"
							   Visibility="{x:Bind IsDeveloper, Mode=OneWay}"/>
				</StackPanel>
			</DataTemplate>
		</Grid.Resources>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition />
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="Auto"/>
			<ColumnDefinition />
			<ColumnDefinition Width="Auto"/>
		</Grid.ColumnDefinitions>


		<!--Header-->
		<controls:HeaderControl Grid.Row="0"
								Grid.ColumnSpan="3"
								HorizontalContentAlignment="Center"/>

		<!--Toggle Theme-->
		<Button x:Name="ToggleThemeButton"
				Grid.ColumnSpan="3" 
				HorizontalAlignment="Right"
				VerticalAlignment="Top"
				Margin="10"
				Content="Light Theme"
				Background="{ThemeResource ToggleButtonBackgroundBrush}"
				FontSize="10"
				Click="ToggleTheme_Click"/>

		<!--Customer List-->
		<Grid x:Name="customerListGrid"
			  Grid.Row="1"
			  Grid.Column="0"
			  Background="{ThemeResource CustomerListBackgroundBrush}" 
			  Width="260px">

			<Grid.RowDefinitions>
				<RowDefinition Height="Auto"/>
				<RowDefinition />
			</Grid.RowDefinitions>

			<!--Navigation Buttons-->
			<StackPanel Orientation="Horizontal">
				<!--Add Employee Button-->
				<!--Using Command instead of events to invoke a method-->
				<Button x:Name="btnAddCustomer"
						Margin="5 5 0 0"
						Command="{x:Bind ViewModel.AddCommand}">
					<StackPanel Orientation="Horizontal">
						<SymbolIcon Symbol="AddFriend" />
						<TextBlock Text="Add" Margin="15 0 0 0"/>
					</StackPanel>
				</Button>

				<!--Delete Employee Button-->
				<Button x:Name="btnDeleteCustomer"
						Margin="5 5 0 0"
						Command="{x:Bind ViewModel.DeleteCommand}">
					<StackPanel Orientation="Horizontal">
						<SymbolIcon Symbol="Delete" />
						<TextBlock Text="Remove" Margin="15 0 0 0"/>
					</StackPanel>
				</Button>

				<!--Change Pane Button-->
				<Button Margin="5 5 0 0"
						Click="ButtonMoveNavigation_Click">
					<StackPanel>
						<SymbolIcon x:Name="changePaneBtnIcon" Symbol="Forward"/>
					</StackPanel>
				</Button>

			</StackPanel>

			<!--List of Employees-->
			<ListView Grid.Row="1" 
					  Margin="0 5 0 0"
					  ItemsSource="{x:Bind ViewModel.Employees, Mode=OneWay}"
					  SelectedItem="{x:Bind ViewModel.SelectedEmployee, Mode=TwoWay}"
					  ItemTemplate="{StaticResource CustomerDataTemplate}"
					  ScrollViewer.HorizontalScrollMode="Enabled"
					  ScrollViewer.HorizontalScrollBarVisibility="Auto" />
		</Grid>

		<!--Customer Detail-->
		<StackPanel Orientation="Vertical"
					Margin="5 5 10 5"
					Grid.Row="1"
					Grid.Column="1"
					Visibility="{x:Bind ViewModel.IsEmployeeSelected, Mode=OneWay}">

			<!--Defining styles for an element Locally on this stackpanel-->
			<!--Local property overrides global definition-->
			<StackPanel.Resources>

				<!--Style defined without key will be implicitly implemented-->
				<Style x:Key="TextBoxStyle" TargetType="TextBox" 
					   BasedOn="{StaticResource TextBoxStylePaddingOnly}">
					<Setter Property="CornerRadius" Value="15"/>
					<Setter Property="Margin" Value="5 20 0 0"/>
				</Style>
				
			</StackPanel.Resources>

			<!--Creating a two way binding-->
			<TextBox x:Name="FirstName"
					 Text="{x:Bind ViewModel.SelectedEmployee.FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					 Header="FirstName" 
					 Style="{StaticResource TextBoxStyle}" 
					 PlaceholderText="Your Firstname"/>
			<TextBox x:Name="LastName"
					 Header="LastName"
					 Text="{x:Bind ViewModel.SelectedEmployee.LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
				 	 Margin="5 20 0 0"
					 Style="{StaticResource TextBoxStyle}" 
					 PlaceholderText="Your Lastname"/>
			<CheckBox x:Name="IsDeveloper" 
					  IsChecked="{x:Bind ViewModel.SelectedEmployee.IsDeveloper, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
					  Margin="5 20 0 0">Is Developer</CheckBox>
		</StackPanel>

		<!--Footer-->
		<controls:FooterControl Grid.Row="2"
								Grid.ColumnSpan="3" 
								HorizontalContentAlignment="Center"/>
	</Grid>
</Window>
